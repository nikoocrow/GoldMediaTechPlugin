{"version":3,"sources":["admin.js","maps.js","ubicaciones-frontend.js"],"names":[],"mappingsfile":"main.js","sourcesContent":["","","/**\n * JavaScript para mostrar mapas de Google en el frontend\n * Maneja la visualización de ubicaciones en páginas públicas\n */\n\n// Variables globales\nlet mapasInicializados = [];\n\n/**\n * Inicializar todos los mapas en la página\n */\nfunction inicializarMapasFrontend() {\n    // Buscar todos los contenedores de mapas individuales\n    const contenedoresMapas = document.querySelectorAll('.mapa-ubicacion');\n    \n    contenedoresMapas.forEach(function(contenedor, index) {\n        inicializarMapaIndividual(contenedor, index);\n    });\n    \n    // Inicializar mapa de archivo de ubicaciones si existe\n    const mapaArchivo = document.querySelector('#mapa-archivo-ubicaciones');\n    if (mapaArchivo) {\n        inicializarMapaArchivo();\n    }\n}\n\n/**\n * Inicializar un mapa individual para una ubicación específica\n */\nfunction inicializarMapaIndividual(contenedor, index) {\n    // Obtener datos del contenedor\n    const latitud = parseFloat(contenedor.dataset.lat);\n    const longitud = parseFloat(contenedor.dataset.lng);\n    const titulo = contenedor.dataset.titulo || 'Ubicación';\n    const direccion = contenedor.dataset.direccion || '';\n    const telefono = contenedor.dataset.telefono || '';\n    const email = contenedor.dataset.email || '';\n    const horarios = contenedor.dataset.horarios || '';\n    \n    // Verificar que las coordenadas sean válidas\n    if (isNaN(latitud) || isNaN(longitud)) {\n        contenedor.innerHTML = '<p class=\"error-mapa\" style=\"text-align: center; color: #666; padding: 50px;\">Error: Coordenadas no válidas para mostrar el mapa</p>';\n        return;\n    }\n    \n    // Crear el mapa\n    const mapa = new google.maps.Map(contenedor, {\n        zoom: 15,\n        center: { lat: latitud, lng: longitud },\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        styles: obtenerEstilosPersonalizados(),\n        mapTypeControl: true,\n        streetViewControl: true,\n        fullscreenControl: true\n    });\n    \n    // Crear marcador\n    const marcador = new google.maps.Marker({\n        position: { lat: latitud, lng: longitud },\n        map: mapa,\n        title: titulo,\n        animation: google.maps.Animation.DROP\n    });\n    \n    // Crear contenido de la ventana de información\n    let contenidoInfo = '<div class=\"info-window\" style=\"max-width: 300px;\">';\n    contenidoInfo += '<h4 style=\"margin: 0 0 10px 0;\">' + titulo + '</h4>';\n    \n    if (direccion) {\n        contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>📍 Dirección:</strong><br>' + direccion + '</p>';\n    }\n    \n    if (telefono) {\n        contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>📞 Teléfono:</strong><br><a href=\"tel:' + telefono + '\">' + telefono + '</a></p>';\n    }\n    \n    if (email) {\n        contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>✉️ Email:</strong><br><a href=\"mailto:' + email + '\">' + email + '</a></p>';\n    }\n    \n    if (horarios) {\n        contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>🕒 Horarios:</strong><br>' + horarios.replace(/\\n/g, '<br>') + '</p>';\n    }\n    \n    contenidoInfo += '<p style=\"margin: 10px 0 5px 0;\"><strong>📍 Coordenadas:</strong><br>' + latitud.toFixed(6) + ', ' + longitud.toFixed(6) + '</p>';\n    contenidoInfo += '<p style=\"margin: 10px 0 0 0;\">';\n    contenidoInfo += '<a href=\"https://www.google.com/maps/dir/?api=1&destination=' + latitud + ',' + longitud + '\" target=\"_blank\" style=\"background: #4285f4; color: white; padding: 5px 10px; text-decoration: none; border-radius: 3px; font-size: 12px;\">Cómo llegar</a>';\n    contenidoInfo += '</p>';\n    contenidoInfo += '</div>';\n    \n    const ventanaInfo = new google.maps.InfoWindow({\n        content: contenidoInfo\n    });\n    \n    // Mostrar ventana de información al hacer clic en el marcador\n    marcador.addListener('click', function() {\n        ventanaInfo.open(mapa, marcador);\n    });\n    \n    // Guardar referencia del mapa\n    mapasInicializados[index] = mapa;\n}\n\n/**\n * Inicializar mapa con múltiples ubicaciones (para archivo)\n */\nfunction inicializarMapaArchivo() {\n    const contenedor = document.querySelector('#mapa-archivo-ubicaciones');\n    const ubicacionesData = contenedor.dataset.ubicaciones;\n    \n    if (!ubicacionesData) {\n        contenedor.innerHTML = '<p class=\"sin-ubicaciones\" style=\"text-align: center; color: #666; padding: 50px;\">No hay ubicaciones para mostrar en el mapa</p>';\n        return;\n    }\n    \n    let ubicaciones;\n    try {\n        ubicaciones = JSON.parse(ubicacionesData);\n    } catch (e) {\n        console.error('Error parsing ubicaciones data:', e);\n        contenedor.innerHTML = '<p class=\"error-mapa\" style=\"text-align: center; color: #666; padding: 50px;\">Error al cargar las ubicaciones</p>';\n        return;\n    }\n    \n    if (ubicaciones.length === 0) {\n        contenedor.innerHTML = '<p class=\"sin-ubicaciones\" style=\"text-align: center; color: #666; padding: 50px;\">No hay ubicaciones para mostrar</p>';\n        return;\n    }\n    \n    // Crear el mapa centrado en Bogotá por defecto\n    const mapa = new google.maps.Map(contenedor, {\n        zoom: 10,\n        center: { lat: 4.6097, lng: -74.0817 },\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        styles: obtenerEstilosPersonalizados(),\n        mapTypeControl: true,\n        streetViewControl: true,\n        fullscreenControl: true\n    });\n    \n    const bounds = new google.maps.LatLngBounds();\n    const marcadores = [];\n    \n    // Agregar marcadores para cada ubicación\n    ubicaciones.forEach(function(ubicacion, index) {\n        const latitud = parseFloat(ubicacion.lat);\n        const longitud = parseFloat(ubicacion.lng);\n        \n        if (isNaN(latitud) || isNaN(longitud)) {\n            return; // Saltar ubicaciones con coordenadas inválidas\n        }\n        \n        const posicion = { lat: latitud, lng: longitud };\n        \n        const marcador = new google.maps.Marker({\n            position: posicion,\n            map: mapa,\n            title: ubicacion.titulo,\n            animation: google.maps.Animation.DROP\n        });\n        \n        // Crear contenido de ventana de información\n        let contenidoInfo = '<div class=\"info-window\" style=\"max-width: 300px;\">';\n        contenidoInfo += '<h4 style=\"margin: 0 0 10px 0;\"><a href=\"' + ubicacion.url + '\" target=\"_blank\" style=\"text-decoration: none;\">' + ubicacion.titulo + '</a></h4>';\n        \n        if (ubicacion.direccion) {\n            contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>📍 Dirección:</strong><br>' + ubicacion.direccion + '</p>';\n        }\n        \n        if (ubicacion.telefono) {\n            contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>📞 Teléfono:</strong><br><a href=\"tel:' + ubicacion.telefono + '\">' + ubicacion.telefono + '</a></p>';\n        }\n        \n        if (ubicacion.email) {\n            contenidoInfo += '<p style=\"margin: 5px 0;\"><strong>✉️ Email:</strong><br><a href=\"mailto:' + ubicacion.email + '\">' + ubicacion.email + '</a></p>';\n        }\n        \n        if (ubicacion.excerpt) {\n            contenidoInfo += '<p style=\"margin: 10px 0;\">' + ubicacion.excerpt + '</p>';\n        }\n        \n        contenidoInfo += '<p style=\"margin: 10px 0;\">';\n        contenidoInfo += '<button onclick=\"abrirModalContacto(\\'' + ubicacion.ID + '\\', \\'' + ubicacion.titulo.replace(/'/g, \"\\\\'\") + '\\')\" style=\"background: #28a745; color: white; padding: 5px 10px; border: none; border-radius: 3px; font-size: 12px; margin-right: 5px; cursor: pointer;\">📞 Contacto</button>';\n        contenidoInfo += '<a href=\"https://www.google.com/maps/dir/?api=1&destination=' + latitud + ',' + longitud + '\" target=\"_blank\" style=\"background: #4285f4; color: white; padding: 5px 10px; text-decoration: none; border-radius: 3px; font-size: 12px;\">🗺️ Cómo llegar</a>';\n        contenidoInfo += '</p>';\n        contenidoInfo += '</div>';\n        \n        const ventanaInfo = new google.maps.InfoWindow({\n            content: contenidoInfo\n        });\n        \n        marcador.addListener('click', function() {\n            // Cerrar otras ventanas abiertas\n            marcadores.forEach(function(m) {\n                if (m.ventanaInfo) {\n                    m.ventanaInfo.close();\n                }\n            });\n            \n            ventanaInfo.open(mapa, marcador);\n        });\n        \n        marcador.ventanaInfo = ventanaInfo;\n        marcadores.push(marcador);\n        bounds.extend(posicion);\n    });\n    \n    // Ajustar el mapa para mostrar todas las ubicaciones\n    if (ubicaciones.length > 1) {\n        mapa.fitBounds(bounds);\n        \n        // Asegurar un zoom mínimo\n        google.maps.event.addListenerOnce(mapa, 'bounds_changed', function() {\n            if (mapa.getZoom() > 15) {\n                mapa.setZoom(15);\n            }\n        });\n    } else {\n        mapa.setCenter(bounds.getCenter());\n        mapa.setZoom(15);\n    }\n}\n\n/**\n * Obtener estilos personalizados para el mapa\n */\nfunction obtenerEstilosPersonalizados() {\n    return [\n        {\n            \"featureType\": \"all\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\"weight\": \"2.00\"}]\n        },\n        {\n            \"featureType\": \"all\",\n            \"elementType\": \"geometry.stroke\",\n            \"stylers\": [{\"color\": \"#9c9c9c\"}]\n        },\n        {\n            \"featureType\": \"all\",\n            \"elementType\": \"labels.text\",\n            \"stylers\": [{\"visibility\": \"on\"}]\n        },\n        {\n            \"featureType\": \"landscape\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"color\": \"#f2f2f2\"}]\n        },\n        {\n            \"featureType\": \"landscape\",\n            \"elementType\": \"geometry.fill\",\n            \"stylers\": [{\"color\": \"#ffffff\"}]\n        },\n        {\n            \"featureType\": \"poi\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"visibility\": \"simplified\"}]\n        },\n        {\n            \"featureType\": \"road\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"saturation\": -100}, {\"lightness\": 45}]\n        },\n        {\n            \"featureType\": \"road.highway\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"visibility\": \"simplified\"}]\n        },\n        {\n            \"featureType\": \"road.arterial\",\n            \"elementType\": \"labels.icon\",\n            \"stylers\": [{\"visibility\": \"off\"}]\n        },\n        {\n            \"featureType\": \"transit\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"visibility\": \"off\"}]\n        },\n        {\n            \"featureType\": \"water\",\n            \"elementType\": \"all\",\n            \"stylers\": [{\"color\": \"#46bcec\"}, {\"visibility\": \"on\"}]\n        }\n    ];\n}\n\n/**\n * Redimensionar mapas cuando cambia el tamaño de la ventana\n */\nfunction redimensionarMapas() {\n    mapasInicializados.forEach(function(mapa) {\n        if (mapa) {\n            google.maps.event.trigger(mapa, 'resize');\n        }\n    });\n}\n\n/**\n * Calcular distancia entre dos puntos\n */\nfunction calcularDistancia(lat1, lng1, lat2, lng2) {\n    const R = 6371; // Radio de la Tierra en km\n    const dLat = (lat2 - lat1) * Math.PI / 180;\n    const dLng = (lng2 - lng1) * Math.PI / 180;\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\n              Math.cos(lat1 * Math.PI / 180) * Math.cos(lat2 * Math.PI / 180) *\n              Math.sin(dLng/2) * Math.sin(dLng/2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\n    return R * c;\n}\n\n/**\n * Inicializar mapas de shortcodes\n */\nfunction inicializarShortcodeMapas() {\n    const shortcodeMapas = document.querySelectorAll('.mapa-ubicaciones-shortcode');\n    shortcodeMapas.forEach(function(contenedor) {\n        const id = contenedor.id;\n        if (id) {\n            inicializarMapaShortcode(id);\n        }\n    });\n}\n\n/**\n * Función para inicializar mapas de shortcode\n */\nfunction inicializarMapaShortcode(idMapa) {\n    const contenedor = document.getElementById(idMapa);\n    if (!contenedor) {\n        console.error('Contenedor de mapa no encontrado:', idMapa);\n        return;\n    }\n    \n    const ubicacionesData = contenedor.dataset.ubicaciones;\n    const zoom = parseInt(contenedor.dataset.zoom) || 13;\n    \n    if (!ubicacionesData) {\n        contenedor.innerHTML = '<div style=\"background: #fff3cd; color: #856404; padding: 30px; text-align: center; border-radius: 8px;\">⚠️ No hay datos de ubicaciones para mostrar.</div>';\n        return;\n    }\n    \n    let ubicaciones;\n    try {\n        ubicaciones = JSON.parse(ubicacionesData);\n    } catch (e) {\n        console.error('Error parsing ubicaciones data:', e);\n        contenedor.innerHTML = '<div style=\"background: #f8d7da; color: #721c24; padding: 30px; text-align: center; border-radius: 8px;\"><strong>Error:</strong> Datos de ubicaciones inválidos.</div>';\n        return;\n    }\n    \n    if (ubicaciones.length === 0) {\n        contenedor.innerHTML = '<div style=\"background: #f8f9fa; color: #6c757d; padding: 30px; text-align: center; border-radius: 8px;\">📍 No hay ubicaciones para mostrar en el mapa.</div>';\n        return;\n    }\n    \n    // Crear el mapa\n    const centroInicial = ubicaciones.length === 1 ? \n        {lat: ubicaciones[0].lat, lng: ubicaciones[0].lng} : \n        {lat: 4.6097, lng: -74.0817}; // Bogotá por defecto\n    \n    const mapa = new google.maps.Map(contenedor, {\n        zoom: zoom,\n        center: centroInicial,\n        mapTypeId: google.maps.MapTypeId.ROADMAP,\n        styles: obtenerEstilosPersonalizados(),\n        mapTypeControl: true,\n        streetViewControl: true,\n        fullscreenControl: true\n    });\n    \n    const bounds = new google.maps.LatLngBounds();\n    const marcadores = [];\n    \n    // Agregar marcadores\n    ubicaciones.forEach(function(ubicacion, index) {\n        const latitud = parseFloat(ubicacion.lat);\n        const longitud = parseFloat(ubicacion.lng);\n        \n        if (isNaN(latitud) || isNaN(longitud)) {\n            console.warn('Coordenadas inválidas para ubicación:', ubicacion.titulo);\n            return;\n        }\n        \n        const posicion = {lat: latitud, lng: longitud};\n        \n        const marcador = new google.maps.Marker({\n            position: posicion,\n            map: mapa,\n            title: ubicacion.titulo,\n            animation: google.maps.Animation.DROP\n        });\n        \n        // Crear contenido de la ventana de información\n        let contenidoInfo = '<div style=\"max-width: 300px; font-family: -apple-system, BlinkMacSystemFont, \\'Segoe UI\\', Roboto, sans-serif;\">';\n        contenidoInfo += '<h4 style=\"margin: 0 0 12px 0; color: #333;\"><a href=\"' + ubicacion.url + '\" style=\"text-decoration: none; color: #0073aa;\">' + ubicacion.titulo + '</a></h4>';\n        \n        if (ubicacion.direccion) {\n            contenidoInfo += '<p style=\"margin: 8px 0; font-size: 14px;\"><strong>📍 Dirección:</strong><br>' + ubicacion.direccion + '</p>';\n        }\n        \n        if (ubicacion.telefono) {\n            contenidoInfo += '<p style=\"margin: 8px 0; font-size: 14px;\"><strong>📞 Teléfono:</strong><br><a href=\"tel:' + ubicacion.telefono + '\" style=\"color: #0073aa;\">' + ubicacion.telefono + '</a></p>';\n        }\n        \n        if (ubicacion.email) {\n            contenidoInfo += '<p style=\"margin: 8px 0; font-size: 14px;\"><strong>✉️ Email:</strong><br><a href=\"mailto:' + ubicacion.email + '\" style=\"color: #0073aa;\">' + ubicacion.email + '</a></p>';\n        }\n        \n        if (ubicacion.horarios) {\n            contenidoInfo += '<p style=\"margin: 8px 0; font-size: 14px;\"><strong>🕒 Horarios:</strong><br>' + ubicacion.horarios.replace(/\\n/g, '<br>') + '</p>';\n        }\n        \n        if (ubicacion.excerpt) {\n            contenidoInfo += '<p style=\"margin: 12px 0; font-size: 14px; color: #666;\">' + ubicacion.excerpt + '</p>';\n        }\n        \n        contenidoInfo += '<div style=\"margin: 15px 0 5px 0; text-align: center;\">';\n        contenidoInfo += '<button onclick=\"abrirModalContacto(\\'' + ubicacion.id + '\\', \\'' + ubicacion.titulo.replace(/'/g, \"\\\\'\") + '\\')\" style=\"background: #28a745; color: white; padding: 8px 16px; border: none; border-radius: 4px; font-size: 13px; margin-right: 8px; cursor: pointer;\">📞 Contacto</button>';\n        contenidoInfo += '<a href=\"https://www.google.com/maps/dir/?api=1&destination=' + latitud + ',' + longitud + '\" target=\"_blank\" style=\"background: #4285f4; color: white; padding: 8px 16px; text-decoration: none; border-radius: 4px; font-size: 13px; display: inline-block;\">🗺️ Cómo llegar</a>';\n        contenidoInfo += '</div>';\n        contenidoInfo += '</div>';\n        \n        const ventanaInfo = new google.maps.InfoWindow({\n            content: contenidoInfo,\n            maxWidth: 350\n        });\n        \n        marcador.addListener('click', function() {\n            // Cerrar otras ventanas abiertas\n            marcadores.forEach(function(m) {\n                if (m.ventanaInfo) {\n                    m.ventanaInfo.close();\n                }\n            });\n            \n            ventanaInfo.open(mapa, marcador);\n        });\n        \n        marcador.ventanaInfo = ventanaInfo;\n        marcadores.push(marcador);\n        bounds.extend(posicion);\n    });\n    \n    // Ajustar vista del mapa\n    if (ubicaciones.length > 1) {\n        mapa.fitBounds(bounds);\n        \n        // Asegurar un zoom mínimo\n        google.maps.event.addListenerOnce(mapa, 'bounds_changed', function() {\n            if (mapa.getZoom() > 15) {\n                mapa.setZoom(15);\n            }\n        });\n    } else if (ubicaciones.length === 1) {\n        mapa.setCenter({lat: ubicaciones[0].lat, lng: ubicaciones[0].lng});\n        mapa.setZoom(zoom);\n    }\n    \n    console.log('Mapa shortcode inicializado:', idMapa, 'con', ubicaciones.length, 'ubicaciones');\n}\n\n// Eventos\ndocument.addEventListener('DOMContentLoaded', function() {\n    // Función para verificar e inicializar mapas\n    function verificarEInicializar() {\n        if (typeof google !== 'undefined' && google.maps) {\n            console.log('Ubicaciones Plugin: Google Maps disponible, inicializando...');\n            inicializarMapasFrontend();\n        } else {\n            console.warn('Ubicaciones Plugin: Google Maps no disponible, reintentando...');\n            // Mostrar mensaje temporal en contenedores\n            var contenedores = document.querySelectorAll('.mapa-ubicacion, #mapa-archivo-ubicaciones, .mapa-ubicaciones-shortcode');\n            contenedores.forEach(function(contenedor) {\n                contenedor.innerHTML = '<p style=\"text-align: center; color: #666; padding: 30px;\">⏳ Cargando Google Maps...</p>';\n            });\n            \n            // Reintentar después de 2 segundos\n            setTimeout(function() {\n                if (typeof google !== 'undefined' && google.maps) {\n                    inicializarMapasFrontend();\n                } else {\n                    // Error final\n                    contenedores.forEach(function(contenedor) {\n                        contenedor.innerHTML = '<p style=\"text-align: center; color: #d63638; padding: 30px;\">❌ Error: No se pudo cargar Google Maps</p>';\n                    });\n                }\n            }, 2000);\n        }\n    }\n    \n    // Verificar inicialmente\n    verificarEInicializar();\n});\n\n// Redimensionar mapas al cambiar tamaño de ventana\nwindow.addEventListener('resize', function() {\n    setTimeout(redimensionarMapas, 300);\n});\n\n// Callback global para Google Maps\nwindow.inicializarMapasFrontend = inicializarMapasFrontend;\nwindow.inicializarShortcodeMapas = inicializarShortcodeMapas;\nwindow.inicializarMapaShortcode = inicializarMapaShortcode;\n\n// Función de callback específica para nuestro plugin\nwindow.inicializarMapasFrontendUbicaciones = function() {\n    console.log('Callback de Google Maps ejecutado para Ubicaciones Plugin');\n    if (typeof inicializarMapasFrontend === 'function') {\n        inicializarMapasFrontend();\n    }\n    if (typeof inicializarShortcodeMapas === 'function') {\n        inicializarShortcodeMapas();\n    }\n};\n\n/**\n * FUNCIONES DEL MODAL DE CONTACTO\n */\n\n// Variables globales del modal\nlet modalContacto = null;\nlet pasoActual = 1;\nlet datosFormulario = {};\n\n/**\n * Abrir modal de contacto\n */\nfunction abrirModalContacto(ubicacionId, nombreUbicacion) {\n    datosFormulario = {\n        ubicacion_id: ubicacionId,\n        ubicacion_nombre: nombreUbicacion,\n        tipo_solicitud: '',\n        paso: 1\n    };\n    \n    crearModal();\n    mostrarPaso1();\n    document.body.style.overflow = 'hidden';\n}\n\n/**\n * Crear el modal\n */\nfunction crearModal() {\n    // Remover modal existente si existe\n    if (modalContacto) {\n        modalContacto.remove();\n    }\n    \n    modalContacto = document.createElement('div');\n    modalContacto.id = 'modal-contacto-ubicaciones';\n    modalContacto.innerHTML = `\n        <div class=\"modal-overlay\" onclick=\"cerrarModal()\"></div>\n        <div class=\"modal-container\">\n            <div class=\"modal-header\">\n                <h3 id=\"modal-titulo\">Formulario de Contacto</h3>\n                <button class=\"modal-close\" onclick=\"cerrarModal()\">&times;</button>\n            </div>\n            <div class=\"modal-body\" id=\"modal-contenido\">\n                <!-- Contenido dinámico -->\n            </div>\n            <div class=\"modal-footer\" id=\"modal-footer\">\n                <!-- Botones dinámicos -->\n            </div>\n        </div>\n    `;\n    \n    // Agregar estilos\n    const estilos = document.createElement('style');\n    estilos.textContent = `\n        #modal-contacto-ubicaciones {\n            position: fixed;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            z-index: 10000;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            animation: fadeIn 0.3s ease;\n        }\n        \n        .modal-overlay {\n            position: absolute;\n            top: 0;\n            left: 0;\n            width: 100%;\n            height: 100%;\n            background: rgba(0, 0, 0, 0.6);\n        }\n        \n        .modal-container {\n            background: white;\n            border-radius: 12px;\n            width: 90%;\n            max-width: 600px;\n            max-height: 90vh;\n            overflow-y: auto;\n            position: relative;\n            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.3);\n            animation: slideIn 0.3s ease;\n        }\n        \n        .modal-header {\n            padding: 20px 25px 15px;\n            border-bottom: 1px solid #eee;\n            display: flex;\n            justify-content: space-between;\n            align-items: center;\n        }\n        \n        .modal-header h3 {\n            margin: 0;\n            color: #333;\n            font-size: 1.3em;\n        }\n        \n        .modal-close {\n            background: none;\n            border: none;\n            font-size: 24px;\n            cursor: pointer;\n            color: #666;\n            padding: 0;\n            width: 30px;\n            height: 30px;\n            display: flex;\n            align-items: center;\n            justify-content: center;\n            border-radius: 50%;\n            transition: background 0.2s;\n        }\n        \n        .modal-close:hover {\n            background: #f0f0f0;\n        }\n        \n        .modal-body {\n            padding: 25px;\n        }\n        \n        .modal-footer {\n            padding: 15px 25px 25px;\n            border-top: 1px solid #eee;\n            display: flex;\n            gap: 10px;\n            justify-content: flex-end;\n        }\n        \n        .opcion-btn {\n            display: flex;\n            flex-direction: column;\n            align-items: center;\n            padding: 30px 20px;\n            border: 2px solid #e0e0e0;\n            border-radius: 12px;\n            background: white;\n            cursor: pointer;\n            transition: all 0.3s ease;\n            text-align: center;\n            width: 100%;\n            max-width: 250px;\n        }\n        \n        .opcion-btn:hover {\n            border-color: #0073aa;\n            box-shadow: 0 4px 12px rgba(0, 115, 170, 0.15);\n            transform: translateY(-2px);\n        }\n        \n        .opcion-btn.selected {\n            border-color: #0073aa;\n            background: #f0f8ff;\n        }\n        \n        .opcion-btn .icono {\n            font-size: 48px;\n            margin-bottom: 15px;\n        }\n        \n        .opcion-btn h4 {\n            margin: 0 0 8px 0;\n            color: #333;\n            font-size: 1.1em;\n        }\n        \n        .opcion-btn p {\n            margin: 0;\n            color: #666;\n            font-size: 0.9em;\n            line-height: 1.4;\n        }\n        \n        .opciones-container {\n            display: flex;\n            gap: 20px;\n            justify-content: center;\n            flex-wrap: wrap;\n            margin: 20px 0;\n        }\n        \n        .form-group {\n            margin-bottom: 20px;\n        }\n        \n        .form-group label {\n            display: block;\n            margin-bottom: 8px;\n            font-weight: 600;\n            color: #333;\n        }\n        \n        .form-group input,\n        .form-group textarea,\n        .form-group select {\n            width: 100%;\n            padding: 12px;\n            border: 2px solid #e0e0e0;\n            border-radius: 6px;\n            font-size: 14px;\n            transition: border-color 0.3s;\n            box-sizing: border-box;\n        }\n        \n        .form-group input:focus,\n        .form-group textarea:focus,\n        .form-group select:focus {\n            outline: none;\n            border-color: #0073aa;\n        }\n        \n        .form-group.required label::after {\n            content: \" *\";\n            color: #e74c3c;\n        }\n        \n        .btn {\n            padding: 12px 24px;\n            border: none;\n            border-radius: 6px;\n            cursor: pointer;\n            font-size: 14px;\n            font-weight: 600;\n            transition: all 0.3s;\n            text-decoration: none;\n            display: inline-block;\n            text-align: center;\n        }\n        \n        .btn-primary {\n            background: #0073aa;\n            color: white;\n        }\n        \n        .btn-primary:hover {\n            background: #005a87;\n        }\n        \n        .btn-secondary {\n            background: #6c757d;\n            color: white;\n        }\n        \n        .btn-secondary:hover {\n            background: #545b62;\n        }\n        \n        .btn-success {\n            background: #28a745;\n            color: white;\n        }\n        \n        .btn-success:hover {\n            background: #218838;\n        }\n        \n        .btn:disabled {\n            opacity: 0.6;\n            cursor: not-allowed;\n        }\n        \n        .loading {\n            display: inline-block;\n            width: 20px;\n            height: 20px;\n            border: 3px solid #f3f3f3;\n            border-top: 3px solid #333;\n            border-radius: 50%;\n            animation: spin 1s linear infinite;\n            margin-right: 8px;\n        }\n        \n        .mensaje-exito {\n            text-align: center;\n            padding: 40px 20px;\n        }\n        \n        .mensaje-exito .icono {\n            font-size: 64px;\n            color: #28a745;\n            margin-bottom: 20px;\n        }\n        \n        .mensaje-exito h4 {\n            color: #28a745;\n            margin-bottom: 15px;\n        }\n        \n        .mensaje-exito p {\n            color: #666;\n            line-height: 1.5;\n        }\n        \n        .progress-bar {\n            height: 4px;\n            background: #e0e0e0;\n            border-radius: 2px;\n            overflow: hidden;\n            margin-bottom: 20px;\n        }\n        \n        .progress-fill {\n            height: 100%;\n            background: #0073aa;\n            border-radius: 2px;\n            transition: width 0.3s ease;\n        }\n        \n        @keyframes fadeIn {\n            from { opacity: 0; }\n            to { opacity: 1; }\n        }\n        \n        @keyframes slideIn {\n            from { transform: translateY(-50px); opacity: 0; }\n            to { transform: translateY(0); opacity: 1; }\n        }\n        \n        @keyframes spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n        }\n        \n        @media (max-width: 768px) {\n            .modal-container {\n                width: 95%;\n                margin: 20px;\n            }\n            \n            .opciones-container {\n                flex-direction: column;\n                align-items: center;\n            }\n            \n            .opcion-btn {\n                max-width: 100%;\n            }\n            \n            .modal-footer {\n                flex-direction: column;\n            }\n        }\n    `;\n    \n    document.head.appendChild(estilos);\n    document.body.appendChild(modalContacto);\n}\n\n/**\n * Mostrar paso 1: Selección de tipo de solicitud\n */\nfunction mostrarPaso1() {\n    pasoActual = 1;\n    \n    document.getElementById('modal-titulo').textContent = 'Tipo de Solicitud - ' + datosFormulario.ubicacion_nombre;\n    \n    document.getElementById('modal-contenido').innerHTML = `\n        <div class=\"progress-bar\">\n            <div class=\"progress-fill\" style=\"width: 33%\"></div>\n        </div>\n        \n        <p style=\"text-align: center; color: #666; margin-bottom: 30px;\">\n            Selecciona el tipo de solicitud que deseas realizar:\n        </p>\n        \n        <div class=\"opciones-container\">\n            <div class=\"opcion-btn\" onclick=\"seleccionarTipo('consulta')\">\n                <div class=\"icono\">💬</div>\n                <h4>Consulta General</h4>\n                <p>Información sobre servicios, horarios, precios y disponibilidad</p>\n            </div>\n            \n            <div class=\"opcion-btn\" onclick=\"seleccionarTipo('cita')\">\n                <div class=\"icono\">📅</div>\n                <h4>Solicitar Cita</h4>\n                <p>Agendar una cita o reunión presencial en esta ubicación</p>\n            </div>\n        </div>\n    `;\n    \n    document.getElementById('modal-footer').innerHTML = `\n        <button class=\"btn btn-secondary\" onclick=\"cerrarModal()\">Cancelar</button>\n    `;\n}\n\n/**\n * Seleccionar tipo de solicitud\n */\nfunction seleccionarTipo(tipo) {\n    datosFormulario.tipo_solicitud = tipo;\n    \n    // Marcar opción seleccionada\n    document.querySelectorAll('.opcion-btn').forEach(btn => btn.classList.remove('selected'));\n    event.target.closest('.opcion-btn').classList.add('selected');\n    \n    // Avanzar al siguiente paso después de un pequeño delay\n    setTimeout(() => {\n        mostrarPaso2();\n    }, 500);\n}\n\n/**\n * Mostrar paso 2: Formulario específico\n */\nfunction mostrarPaso2() {\n    pasoActual = 2;\n    \n    const titulo = datosFormulario.tipo_solicitud === 'consulta' ? 'Consulta General' : 'Solicitar Cita';\n    document.getElementById('modal-titulo').textContent = titulo + ' - ' + datosFormulario.ubicacion_nombre;\n    \n    let contenidoEspecifico = '';\n    \n    if (datosFormulario.tipo_solicitud === 'consulta') {\n        contenidoEspecifico = `\n            <div class=\"form-group required\">\n                <label for=\"asunto\">Asunto de la consulta</label>\n                <select id=\"asunto\" name=\"asunto\" required>\n                    <option value=\"\">Selecciona un asunto</option>\n                    <option value=\"servicios\">Información sobre servicios</option>\n                    <option value=\"precios\">Consulta de precios</option>\n                    <option value=\"horarios\">Horarios de atención</option>\n                    <option value=\"ubicacion\">Información de ubicación</option>\n                    <option value=\"otro\">Otro</option>\n                </select>\n            </div>\n        `;\n    } else {\n        contenidoEspecifico = `\n            <div class=\"form-group required\">\n                <label for=\"tipo_cita\">Tipo de cita</label>\n                <select id=\"tipo_cita\" name=\"tipo_cita\" required>\n                    <option value=\"\">Selecciona el tipo de cita</option>\n                    <option value=\"reunion\">Reunión de negocios</option>\n                    <option value=\"consulta_presencial\">Consulta presencial</option>\n                    <option value=\"visita_tecnica\">Visita técnica</option>\n                    <option value=\"entrevista\">Entrevista</option>\n                    <option value=\"otro\">Otro</option>\n                </select>\n            </div>\n            \n            <div class=\"form-group required\">\n                <label for=\"fecha_preferida\">Fecha preferida</label>\n                <input type=\"date\" id=\"fecha_preferida\" name=\"fecha_preferida\" required min=\"${new Date().toISOString().split('T')[0]}\">\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"hora_preferida\">Hora preferida</label>\n                <select id=\"hora_preferida\" name=\"hora_preferida\">\n                    <option value=\"\">Selecciona una hora</option>\n                    <option value=\"09:00\">09:00 AM</option>\n                    <option value=\"10:00\">10:00 AM</option>\n                    <option value=\"11:00\">11:00 AM</option>\n                    <option value=\"14:00\">02:00 PM</option>\n                    <option value=\"15:00\">03:00 PM</option>\n                    <option value=\"16:00\">04:00 PM</option>\n                </select>\n            </div>\n        `;\n    }\n    \n    document.getElementById('modal-contenido').innerHTML = `\n        <div class=\"progress-bar\">\n            <div class=\"progress-fill\" style=\"width: 66%\"></div>\n        </div>\n        \n        <form id=\"formulario-contacto\">\n            <div class=\"form-group required\">\n                <label for=\"nombre_completo\">Nombre completo</label>\n                <input type=\"text\" id=\"nombre_completo\" name=\"nombre_completo\" required>\n            </div>\n            \n            <div class=\"form-group required\">\n                <label for=\"email\">Correo electrónico</label>\n                <input type=\"email\" id=\"email\" name=\"email\" required>\n            </div>\n            \n            <div class=\"form-group required\">\n                <label for=\"telefono\">Teléfono</label>\n                <input type=\"tel\" id=\"telefono\" name=\"telefono\" required>\n            </div>\n            \n            <div class=\"form-group\">\n                <label for=\"empresa\">Empresa (opcional)</label>\n                <input type=\"text\" id=\"empresa\" name=\"empresa\">\n            </div>\n            \n            ${contenidoEspecifico}\n            \n            <div class=\"form-group required\">\n                <label for=\"mensaje\">Mensaje</label>\n                <textarea id=\"mensaje\" name=\"mensaje\" rows=\"4\" required placeholder=\"Describe tu solicitud en detalle...\"></textarea>\n            </div>\n        </form>\n    `;\n    \n    document.getElementById('modal-footer').innerHTML = `\n        <button class=\"btn btn-secondary\" onclick=\"mostrarPaso1()\">Atrás</button>\n        <button class=\"btn btn-primary\" onclick=\"enviarFormulario()\">Enviar Solicitud</button>\n    `;\n}\n\n/**\n * Enviar formulario con AJAX\n */\nfunction enviarFormulario() {\n    const form = document.getElementById('formulario-contacto');\n    const formData = new FormData(form);\n    \n    // Validar campos requeridos\n    const camposRequeridos = form.querySelectorAll('[required]');\n    let todosCompletos = true;\n    \n    camposRequeridos.forEach(campo => {\n        if (!campo.value.trim()) {\n            campo.style.borderColor = '#e74c3c';\n            todosCompletos = false;\n        } else {\n            campo.style.borderColor = '#e0e0e0';\n        }\n    });\n    \n    if (!todosCompletos) {\n        alert('Por favor completa todos los campos obligatorios');\n        return;\n    }\n    \n    // Agregar datos adicionales\n    formData.append('action', 'procesar_contacto_ubicacion');\n    formData.append('ubicacion_id', datosFormulario.ubicacion_id);\n    formData.append('ubicacion_nombre', datosFormulario.ubicacion_nombre);\n    formData.append('tipo_solicitud', datosFormulario.tipo_solicitud);\n    formData.append('nonce', ubicacionesData.nonce);\n    \n    // Mostrar estado de carga\n    const botonEnviar = document.querySelector('#modal-footer .btn-primary');\n    botonEnviar.innerHTML = '<span class=\"loading\"></span>Enviando...';\n    botonEnviar.disabled = true;\n    \n    // Enviar con AJAX\n    fetch(ubicacionesData.ajaxurl, {\n        method: 'POST',\n        body: formData\n    })\n    .then(response => response.json())\n    .then(data => {\n        if (data.success) {\n            mostrarExito(data.data.mensaje);\n        } else {\n            throw new Error(data.data || 'Error al enviar el formulario');\n        }\n    })\n    .catch(error => {\n        console.error('Error:', error);\n        alert('Error al enviar el formulario: ' + error.message);\n        \n        // Restaurar botón\n        botonEnviar.innerHTML = 'Enviar Solicitud';\n        botonEnviar.disabled = false;\n    });\n}\n\n/**\n * Mostrar mensaje de éxito\n */\nfunction mostrarExito(mensaje) {\n    document.getElementById('modal-titulo').textContent = '¡Solicitud Enviada!';\n    \n    document.getElementById('modal-contenido').innerHTML = `\n        <div class=\"progress-bar\">\n            <div class=\"progress-fill\" style=\"width: 100%\"></div>\n        </div>\n        \n        <div class=\"mensaje-exito\">\n            <div class=\"icono\">✅</div>\n            <h4>¡Solicitud enviada correctamente!</h4>\n            <p>${mensaje}</p>\n            <p>Te contactaremos pronto a través de los datos proporcionados.</p>\n        </div>\n    `;\n    \n    document.getElementById('modal-footer').innerHTML = `\n        <button class=\"btn btn-success\" onclick=\"cerrarModal()\">Cerrar</button>\n    `;\n}\n\n/**\n * Cerrar modal\n */\nfunction cerrarModal() {\n    if (modalContacto) {\n        modalContacto.remove();\n        modalContacto = null;\n    }\n    document.body.style.overflow = '';\n}\n\n// Hacer funciones globales\nwindow.abrirModalContacto = abrirModalContacto;\nwindow.cerrarModal = cerrarModal;\nwindow.seleccionarTipo = seleccionarTipo;\nwindow.mostrarPaso1 = mostrarPaso1;\nwindow.enviarFormulario = enviarFormulario;"]}